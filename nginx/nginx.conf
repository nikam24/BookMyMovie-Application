events {
  worker_connections 1024;
}

http {
  upstream backend {
    server backend:5000 max_fails=3 fail_timeout=30s;  # Points to the backend container on port 5000
    server backend:5001 max_fails=3 fail_timeout=30s;
    server backend:5002 max_fails=3 fail_timeout=30s;
  }

  server {
    listen 80;  # Listens on HTTP

    location / {
      proxy_pass http://backend;  # Forward requests to the backend container
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /sockjs-node {
      proxy_pass http://frontend:3000;  # Forward WebSocket requests to the frontend container
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }
  }
}














# worker_processes 1;

# events {
#   worker_connections 1024;
# }

# http {
#   upstream backend {
#     server backend:5000;  # Points to the backend container on port 5000
#     server backend:5001;
#     server backend:5002;
#   }

#   server {
#     listen 80;   
#     server_name backend;

#     # Redirect HTTP to HTTPS
#     return 301 https://$host$request_uri;
# }

#   server {
#     listen 443 ssl;
#     server_name backend;  # Replace with your domain or localhost

#     ssl_certificate /app/frontend/.cert/cert.pem;
#     ssl_certificate_key /app/frontend/.cert/key.pem;

#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

#     location / {
#       proxy_pass http://backend;  # Forward requests to the backend container
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location /sockjs-node {
#       proxy_pass http://frontend:3000;  # Forward WebSocket requests to the frontend container
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection "Upgrade";
#     }
#   }
# }
